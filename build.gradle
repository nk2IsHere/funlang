import org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTargetWithTests

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.5.21'
}

group = 'funlang'
version = '0.0.1'

repositories {
    maven { url("https://dl.bintray.com/korlibs/korlibs") }
    mavenCentral()
}

kotlin {
    def hostOs = System.getProperty("os.name")
    def isMingwX64 = hostOs.startsWith("Windows")
    KotlinNativeTargetWithTests nativeTarget
    if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")

    nativeTarget.with {
        binaries {
            executable {
                entryPoint = 'funlang.main'
            }
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1")
                implementation("org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.4")
                implementation("com.soywiz.korlibs.korio:korio:2.3.1")
            }
        }
        nativeMain {

        }
        nativeTest {

        }
    }
}

task prepareTestCases {
    shouldRunAfter build
    doLast {
        copy {
            from 'test'
            into "$buildDir/bin/native/debugExecutable/test"
        }
        copy {
            from 'test'
            into "$buildDir/bin/native/releaseExecutable/test"
        }
    }
}
